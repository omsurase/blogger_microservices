version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-blogger}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  service-registry:
    build:
      context: ./server/service-registry
      dockerfile: Dockerfile
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/services"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./server/auth
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/blogger?sslmode=disable
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key}
      - REGISTRY_URL=http://service-registry:8080
      - PORT=8080
      - REDIS_ADDR=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-profile:
    build:
      context: ./server/user-profile
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/blogger?sslmode=disable
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key}
      - REGISTRY_URL=http://service-registry:8080
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/profile/test"]
      interval: 5s
      timeout: 5s
      retries: 5

  post-service:
    build:
      context: ./server/post
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/blogger?sslmode=disable
      - REDIS_ADDR=redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key}
      - REGISTRY_URL=http://service-registry:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  comment:
    build:
      context: ./server/comment
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/blogger?sslmode=disable
      - RABBITMQ_URL=${RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672/}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key}
      - REGISTRY_URL=http://service-registry:8080
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/comment/post/test"]
      interval: 5s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: ./server/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8080
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key}
      - ENVIRONMENT=development
      - VERSION=1.0.0
      - REDIS_ADDR=redis:6379
    depends_on:
      service-registry:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  notification:
    build:
      context: ./server/notification
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672/}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=omsurase2504@gmail.com
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=omsurase2504@gmail.com
      - AUTH_SERVICE_URL=http://auth-service:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      auth-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "notification-service", "|", "grep", "-v", "grep"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: 